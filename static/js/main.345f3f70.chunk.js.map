{"version":3,"sources":["common/navbar.js","utils/history.js","api/books.js","redux/actions.js","redux/actionTypes.js","books/book.js","books/index.js","books/edit.js","routes.js","App.js","serviceWorker.js","redux/reducers/index.js","redux/reducers/books.js","redux/reducers/booksFilters.js","configureStore.js","index.js"],"names":["Navbar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","React","Component","createBrowserHistory","axios","defaults","baseURL","process","params","get","then","response","data","book","post","title","patch","delete","receiveBooks","json","payload","Book","this","props","editLink","scope","shortDate","created_at","onClick","deleteBook","str","d","Date","time","getHours","getMinutes","toDateString","join","mapDispatchToProps","dispatch","BooksApi","removeBook","connect","Books","handleInput","bind","fetchBooks","e","value","target","sort","sortBooks","books","map","key","name","sortField","onChange","disabled","state","booksFilters","EditBook","input","onSubmit","paramId","isEditMode","setState","currentTarget","preventDefault","updateBook","createBook","mode","match","undefined","htmlFor","history","push","Routes","path","About","render","App","Boolean","window","location","hostname","combineReducers","action","newState","filter","val","item","index","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"wPA0BeA,E,uKArBX,OACE,yBAAKC,UAAU,iDACb,uBAAGA,UAAU,eAAeC,KAAK,KAAjC,aACA,4BAAQD,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBAC1J,0BAAMP,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BQ,GAAG,aAC3C,wBAAIR,UAAU,cACZ,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWS,GAAG,KAA9B,SAEF,wBAAIT,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWS,GAAG,UAA9B,iB,GAdOC,IAAMC,W,uBCDZC,gB,iBCDfC,IAAMC,SAASC,QAAUC,yCAEV,iBACK,IAAZC,EAAW,uDAAJ,GACX,OAAOJ,IAAMK,IAAI,SAAU,CAAED,WAC1BE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAHlB,WAKNC,GACL,OAAOT,IAAMU,KAAK,SAAU,CAAED,SAC3BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAPlB,WASNb,EATM,GASU,IAAVgB,EAAS,EAATA,MACX,OAAOX,IAAMY,MAAM,UAAYjB,EAAI,CAAEgB,UAClCL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAXlB,WAaRb,GACH,OAAOK,IAAMK,IAAI,UAAYV,GAC1BW,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAflB,WAiBNb,GACL,OAAOK,IAAMa,OAAO,UAAYlB,ICZvBmB,EAAe,SAACC,GAAD,MAAW,CACrC1B,KCT2B,gBDU3B2B,QAASD,I,IENLE,E,uKAGM,IAAD,OACCR,EAASS,KAAKC,MAAdV,KACFd,EAAKc,EAAKd,GACVyB,EAAQ,iBAAazB,EAAb,SACd,OACE,4BACE,wBAAI0B,MAAM,OAAQ1B,GAClB,4BAAMc,EAAKE,OACX,4BAAMO,KAAKI,UAAUb,EAAKc,aAC1B,4BACE,kBAAC,IAAD,CAAMpC,UAAU,OAAOS,GAAIwB,GAA3B,QACA,uBAAGhC,KAAK,IAAIoC,QAAS,kBAAM,EAAKL,MAAMM,WAAW9B,KAAjD,c,gCAKE+B,GACR,IAAMC,EAAI,IAAIC,KAAKF,GACbG,EAAI,UAAOF,EAAEG,WAAT,YAAuBH,EAAEI,cACnC,MAAO,CAACJ,EAAEK,eAAgBH,GAAMI,KAAK,S,GAtBtBpC,IAAMC,WA0BnBoC,EAAqB,CACzBT,WFIK,SAAoB9B,GACzB,OAAO,SAAgBwC,GACrB,OAAOC,EAAgBzC,GAAIW,MAAK,SAAAS,GAAI,OAAIoB,EAxBlB,SAACxC,GAAD,MAAS,CACjCN,KCZyB,eDazBM,GAAIA,GAsB+C0C,CAAW1C,UEHjD2C,cAAQ,KAAMJ,EAAdI,CAAkCrB,GC7B3CsB,E,kDACJ,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IACDqB,YAAc,EAAKA,YAAYC,KAAjB,gBAFF,E,gEAMjBvB,KAAKC,MAAMuB,e,kCAGDC,GACV,IAAMC,EAAQD,EAAEE,OAAOD,MACvB1B,KAAKC,MAAMuB,WAAW,CAAEI,KAAMF,IAC9B1B,KAAKC,MAAM4B,UAAUH,K,+BAIrB,IAAMI,EAAQ9B,KAAKC,MAAM6B,MAAMC,KAAI,SAACxC,GAAD,OACjC,kBAAC,EAAD,CAAMyC,IAAKzC,EAAKd,GAAIc,KAAMA,OAE5B,OACE,oCACE,yBAAKtB,UAAU,OACb,yBAAKA,UAAU,SACb,kBAAC,IAAD,CAAMA,UAAU,uBAAuBS,GAAG,aAA1C,aAEF,yBAAKT,UAAU,oCACb,4BAAQgE,KAAK,YAAYP,MAAO1B,KAAKC,MAAMiC,UAAWC,SAAWnC,KAAKsB,YAAcrD,UAAU,gBAC5F,4BAAQyD,MAAM,GAAGU,UAAQ,GAAzB,WACA,4BAAQV,MAAM,cAAd,WACA,4BAAQA,MAAM,SAAd,YAIN,2BAAOzD,UAAU,SACf,+BACE,4BACE,wBAAIkC,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,WACA,wBAAIA,MAAM,OAAV,aAGJ,+BACI2B,S,GA5CMnD,IAAMC,WAyDXwC,eALS,SAAAiB,GAAK,MAAK,CAChCP,MAAOO,EAAMP,MACbI,UAAWG,EAAMC,aAAaJ,aAGQ,CAAEV,WHvCnC,WAAgC,IAAZtC,EAAW,uDAAJ,GAChC,OAAO,SAAgB+B,GACrBC,EAAehC,GAAQE,MAAK,SAAAS,GAAI,OAAIoB,EAASrB,EAAaC,SGqCRgC,UH5C5B,SAACK,GAAD,MAAgB,CACxC/D,KCfwB,aDgBxB+D,eG0Cad,CAAoDC,GCzD7DkB,E,kDAUJ,WAAYtC,GAAQ,IAAD,8BACjB,cAAMA,IAEDoC,MAAQ,CACXG,MAAO,IAGT,EAAKL,SAAW,EAAKA,SAASZ,KAAd,gBAChB,EAAKkB,SAAW,EAAKA,SAASlB,KAAd,gBARC,E,gEATE,IAAD,OACZ9C,EAAKuB,KAAK0C,UACZ1C,KAAK2C,cACPzB,EAAczC,GAAIW,MAAK,SAAAS,GACrB,EAAK+C,SAAS,CAAEJ,MAAO3C,EAAKJ,e,8CAgBzBgC,GACPzB,KAAK4C,SAAS,CAAEJ,MAAOf,EAAEoB,cAAcnB,U,+BAGhCD,GAEP,GADAA,EAAEqB,iBACE9C,KAAK2C,aACP,OAAO3C,KAAKC,MAAM8C,WAAW/C,KAAK0C,UAAW,CAAEjD,MAAOO,KAAKqC,MAAMG,QAGnExC,KAAKC,MAAM+C,WAAW,CAAEvD,MAAOO,KAAKqC,MAAMG,U,mCAI1C,QAA8B,SAApBxC,KAAKC,MAAMgD,Q,gCAIrB,OAAOjD,KAAK2C,aAAe3C,KAAKC,MAAMiD,MAAMhE,OAAOT,QAAK0E,I,+BAIxD,OACE,oCACE,0BAAMV,SAAUzC,KAAKyC,UACnB,yBAAKxE,UAAU,cACb,2BAAOmF,QAAQ,cAAf,SACA,2BAAOjF,KAAK,OAAOuD,MAAO1B,KAAKqC,MAAMG,MAAOL,SAAUnC,KAAKmC,SAAUlE,UAAU,eAAeQ,GAAG,gBAEnG,4BAAQN,KAAK,SAASF,UAAU,mBAAhC,gB,GAlDaU,IAAMC,WA6DdwC,cAAQ,KAAM,CAAE4B,WJrCxB,SAAoBzD,GACzB,OAAO,SAAgB0B,GACrB,OAAOC,EAAgB3B,GAAMH,MAAK,kBAAMiE,EAAQC,KAAK,UImCdP,WJzBpC,SAAoBtE,EAApB,GAAoC,IAAVgB,EAAS,EAATA,MAC/B,OAAO,SAAgBwB,GACrB,OAAOC,EAAgBzC,EAAI,CAAEgB,UAASL,MAAK,kBAAMiE,EAAQC,KAAK,WIuBnDlC,CAA0CmB,G,OC3D1C,SAASgB,IACtB,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,UACV,kBAACC,EAAD,OAGF,kBAAC,IAAD,CAAOD,KAAK,aACV,kBAAC,EAAD,CAAUP,KAAK,SAGjB,kBAAC,IAAD,CAAOO,KAAK,kBAAkBE,OAC5B,SAACzD,GAAD,OAAW,kBAAC,EAAD,iBAAcA,EAAd,CAAqBgD,KAAK,aAGvC,kBAAC,IAAD,CAAOO,KAAK,KACV,kBAAC,EAAD,SAOV,SAASC,IACP,OAAO,oCCfME,MAZf,WACE,OACE,yBAAK1F,UAAU,aACb,kBAAC,IAAD,CAAQoF,QAASA,GACf,kBAAC,EAAD,MACA,kBAACE,EAAD,SCCYK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASb,MACvB,2D,oCCfSc,cAAgB,CAAElC,MCDlB,WAA8B,IAArBO,EAAoB,uDAAZ,GAAI4B,EAAQ,uCAC1C,OAAQA,EAAO9F,MACb,IRFsB,aQGpB,MAAM,GAAN,mBAAWkE,GAAX,CAAkB4B,EAAOnE,UAC3B,IRLyB,gBQMvB,OAAOmE,EAAOnE,QAChB,IRLuB,eQMrB,IAAMoE,EAAW7B,EAAM8B,QAAO,SAAAC,GAAG,OAAIA,EAAI3F,KAAOwF,EAAOxF,MACvD,OAAOyF,EACT,IRPuB,eQOvB,IACUzE,EAAUwE,EAAVxE,MACR,OAAO4C,EAAMN,KAAI,SAACsC,EAAMC,GACtB,OAAID,EAAK5F,KAAOwF,EAAOxF,GACd,2BAAK4F,GAAZ,IAAkB5E,UAEb4E,KAEX,QACE,OAAOhC,IDjB2BC,aEDzB,WAA6C,IAApCD,EAAmC,uDAA3B,CAAEH,UAAW,IAAM+B,EAAQ,uCACjD/B,EAAc+B,EAAd/B,UACR,OAAKA,EACE,2BAAKG,GAAZ,IAAmBH,cADMG,KCArBkC,EAAmBV,OAAOW,sCAAwCC,ICMxE,IAAMC,EDHGC,YACLC,EACAL,EACEM,YAAgBC,OCCtBC,IAASrB,OACP,kBAAC,IAAMsB,WAAP,KACE,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,QAGJO,SAASC,eAAe,SLkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjG,MAAK,SAAAkG,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.345f3f70.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"#\">React App</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active\">\n              <Link className='nav-link' to='/'>Home</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className='nav-link' to='/about'>About</Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    )\n  }\n}\n\nexport default Navbar\n","import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory();\n\n","import axios from 'axios'\naxios.defaults.baseURL = process.env.REACT_APP_API_HOST;\n\nexport default {\n  index(params={}) {\n    return axios.get('/books', { params })\n      .then(response => response.data)\n  },\n  create(book) {\n    return axios.post('/books', { book })\n      .then(response => response.data)\n  },\n  update(id, { title }) {\n    return axios.patch('/books/' + id, { title })\n      .then(response => response.data)\n  },\n  read(id) {\n    return axios.get('/books/' + id)\n      .then(response => response.data)\n  },\n  delete(id) {\n    return axios.delete('/books/' + id)\n  }\n}\n\n","import { SORT_BOOKS, RECEIVE_BOOKS, REQUEST_BOOKS, REMOVE_BOOK, UPDATE_BOOK } from './actionTypes'\nimport history from \"../utils/history\"\nimport BooksApi from '../api/books'\nimport axios from 'axios'\n\nexport const requestBooks = () => ({\n  type: REQUEST_BOOKS\n})\n\nexport const receiveBooks = (json) => ({\n  type: RECEIVE_BOOKS,\n  payload: json\n})\n\nexport const removeBook = (id) => ({\n  type: REMOVE_BOOK,\n  id: id\n})\n\nexport const sortBooks = ((sortField) => ({\n  type: SORT_BOOKS,\n  sortField\n}))\n\nexport function fetchBooks(params={}) {\n  return function action(dispatch) {\n    BooksApi.index(params).then(json => dispatch(receiveBooks(json)))\n  }\n}\n\nexport function createBook(book) {\n  return function action(dispatch) {\n    return BooksApi.create(book).then(() => history.push('/'))\n  }\n}\n\nexport function deleteBook(id) {\n  return function action(dispatch) {\n    return BooksApi.delete(id).then(json => dispatch(removeBook(id)))\n  }\n}\n\nexport function updateBook(id, { title }) {\n  return function action(dispatch) {\n    return BooksApi.update(id, { title }).then(() => history.push('/'))\n  }\n}\n\n\n","export const REQUEST_BOOKS = 'REQUEST_BOOKS'\nexport const RECEIVE_BOOKS = 'RECEIVE_BOOKS'\nexport const BOOK_ADDED = 'BOOK_ADDED'\nexport const REMOVE_BOOK = 'BOOK_REMOVED'\nexport const UPDATE_BOOK = 'BOOK_UPDATED'\nexport const SORT_BOOKS = 'SORT_BOOKS'\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { deleteBook } from '../redux/actions'\nimport { Link } from 'react-router-dom'\n\nclass Book extends React.Component {\n\n\n  render() {\n    const { book } = this.props\n    const id = book.id\n    const editLink = `/books/${id}/edit`\n    return(\n      <tr>\n        <th scope=\"row\">{ id }</th>\n        <td>{ book.title }</td>\n        <td>{ this.shortDate(book.created_at) }</td>\n        <td>\n          <Link className='mr-2' to={editLink}>Edit</Link>\n          <a href=\"#\" onClick={() => this.props.deleteBook(id)}>Remove</a></td>\n      </tr>\n    )\n  }\n\n  shortDate(str) {\n    const d = new Date(str)\n    const time =  `${d.getHours()}:${d.getMinutes()}`\n    return [d.toDateString(), time].join(' ')\n  }\n}\n\nconst mapDispatchToProps = {\n  deleteBook\n}\n\nexport default connect(null, mapDispatchToProps)(Book)\n\n","import React from 'react'\nimport Book from './book'\nimport { connect } from 'react-redux'\nimport { fetchBooks, sortBooks } from '../redux/actions'\nimport { Link } from 'react-router-dom'\n\nclass Books extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleInput = this.handleInput.bind(this)\n  }\n\n  componentDidMount() {\n    this.props.fetchBooks()\n  }\n\n  handleInput(e) {\n    const value = e.target.value\n    this.props.fetchBooks({ sort: value })\n    this.props.sortBooks(value)\n  }\n\n  render() {\n    const books = this.props.books.map((book) =>\n      <Book key={book.id} book={book} />\n    )\n    return(\n      <>\n        <div className='row'>\n          <div className='col-2'>\n            <Link className='btn btn-primary my-4' to='/add-book'>Add book</Link>\n          </div>\n          <div className='col-2 offset-8 align-self-center'>\n            <select name='sortField' value={this.props.sortField} onChange={ this.handleInput } className='form-control'>\n              <option value='' disabled>Sort by</option>\n              <option value='created_at'>Created</option>\n              <option value='title'>Title</option>\n            </select>\n          </div>\n        </div>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Title</th>\n              <th scope=\"col\">Created</th>\n              <th scope=\"col\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            { books }\n          </tbody>\n        </table>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  sortField: state.booksFilters.sortField\n})\n\nexport default connect(mapStateToProps, { fetchBooks, sortBooks })(Books)\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createBook, updateBook } from '../redux/actions'\nimport PropTypes from 'prop-types'\nimport BooksApi from '../api/books'\n\nclass EditBook extends React.Component {\n  componentDidMount() {\n    const id = this.paramId()\n    if (this.isEditMode()) {\n      BooksApi.read(id).then(json => {\n        this.setState({ input: json.title })\n      })\n    }\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      input: ''\n    }\n\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  onChange(e) {\n    this.setState({ input: e.currentTarget.value })\n  }\n\n  onSubmit(e) {\n    e.preventDefault()\n    if (this.isEditMode()) {\n      return this.props.updateBook(this.paramId(), { title: this.state.input })\n    }\n\n    this.props.createBook({ title: this.state.input })\n  }\n\n  isEditMode() {\n    return !!(this.props.mode === 'edit')\n  }\n\n  paramId() {\n    return this.isEditMode() ? this.props.match.params.id : undefined\n  }\n\n  render() {\n    return(\n      <>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"titleInput\">Title</label>\n            <input type=\"book\" value={this.state.input} onChange={this.onChange} className=\"form-control\" id=\"titleInput\" />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n        </form>\n      </>\n    )\n  }\n}\n\nEditBook.propTypes = {\n  mode: PropTypes.string\n}\n\nexport default connect(null, { createBook, updateBook })(EditBook)\n","import React from 'react'\nimport Books from './books/index'\nimport EditBook from './books/edit'\n\nimport {\n  Switch,\n  Route\n} from 'react-router-dom';\nexport default function Routes() {\n  return (\n    <>\n      <Switch>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n\n        <Route path='/add-book'>\n          <EditBook mode='add'/>\n        </Route>\n\n        <Route path='/books/:id/edit' render={\n          (props) => <EditBook {...props} mode='edit' />\n        }>\n        </Route>\n        <Route path=\"/\">\n          <Books />\n        </Route>\n\n      </Switch>\n    </>\n  )\n}\nfunction About() {\n  return <i>About</i>;\n}\n\n","import React from 'react';\nimport Navbar from './common/navbar';\nimport Routes from './routes';\nimport history from './utils/history'\nimport { Router } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className='container'>\n      <Router history={history}>\n        <Navbar></Navbar>\n        <Routes />\n      </Router>\n    </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import books from './books'\nimport booksFilters from './booksFilters'\nimport { combineReducers } from 'redux'\nexport default combineReducers({ books, booksFilters })\n\n\n","import { RECEIVE_BOOKS, BOOK_ADDED, REMOVE_BOOK, UPDATE_BOOK } from '../actionTypes'\n\nexport default function(state = [], action) {\n  switch (action.type) {\n    case BOOK_ADDED:\n      return [...state, action.payload]\n    case RECEIVE_BOOKS:\n      return action.payload\n    case REMOVE_BOOK:\n      const newState = state.filter(val => val.id !== action.id)\n      return newState\n    case UPDATE_BOOK:\n      const { title } = action\n      return state.map((item, index) => {\n        if (item.id === action.id) {\n          return { ...item, title }\n        }\n        return item\n      })\n    default:\n      return state\n  }\n}\n\n","import { SORT_BOOKS } from '../actionTypes'\n\nexport default function(state = { sortField: '' }, action) {\n  const { sortField } = action\n  if (!sortField) { return state }\n  return { ...state, sortField }\n}\n\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport rootReducer from './redux/reducers/index'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore(preloadedState) {\n  return createStore(\n    rootReducer,\n    composeEnhancers(\n      applyMiddleware(thunkMiddleware)\n    )\n  )\n}\n\n","import 'bootstrap/dist/css/bootstrap.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport configureStore from './configureStore'\nconst store = configureStore()\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}